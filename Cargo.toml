[workspace]
members = [
    "crates/api",
    "crates/components/connections",
    "crates/components/connections/devices",
    "crates/components/connections/devices/g13",
    "crates/components/connections/devices/gamepads",
    "crates/components/connections/devices/ndi",
    "crates/components/connections/devices/webcams",
    "crates/components/connections/protocols/citp",
    "crates/components/connections/protocols/dmx",
    "crates/components/connections/protocols/laser",
    "crates/components/connections/protocols/midi",
    "crates/components/connections/protocols/midi/device-profiles",
    "crates/components/connections/protocols/midi/messages",
    "crates/components/connections/protocols/mqtt",
    "crates/components/connections/protocols/osc",
    "crates/components/connections/protocols/pro-dj-link",
    "crates/components/fixtures",
    "crates/components/fixtures/commands",
    "crates/components/fixtures/gdtf",
    "crates/components/fixtures/mizer-definitions",
    "crates/components/fixtures/open-fixture-library",
    "crates/components/fixtures/patch-export",
    "crates/components/fixtures/qlcplus",
    "crates/components/plan",
    "crates/components/media",
    "crates/components/sequencer",
    "crates/components/sequencer/commands",
    "crates/components/surfaces",
    "crates/components/timecode",
    "crates/components/vector",
    "crates/projects",
    "crates/runtime",
    "crates/runtime/clock",
    "crates/runtime/commander",
    "crates/runtime/commander/executor",
    "crates/runtime/debug-ui",
    "crates/runtime/debug-ui/impl",
    "crates/runtime/debug-ui/egui",
    "crates/runtime/execution-planner",
    "crates/runtime/injector",
    "crates/runtime/layouts",
    "crates/runtime/layouts/commands",
    "crates/runtime/module",
    "crates/runtime/session",
    "crates/runtime/pipeline",
    "crates/runtime/pipeline/node",
    "crates/runtime/pipeline/nodes",
    "crates/runtime/pipeline/nodes/audio",
    "crates/runtime/pipeline/nodes/behaviors/color",
    "crates/runtime/pipeline/nodes/behaviors/constants",
    "crates/runtime/pipeline/nodes/behaviors/conversions",
    "crates/runtime/pipeline/nodes/behaviors/envelope",
    "crates/runtime/pipeline/nodes/behaviors/math",
    "crates/runtime/pipeline/nodes/behaviors/oscillator",
    "crates/runtime/pipeline/nodes/behaviors/port-operations",
    "crates/runtime/pipeline/nodes/behaviors/scripting",
    "crates/runtime/pipeline/nodes/behaviors/step-sequencer",
    "crates/runtime/pipeline/nodes/behaviors/timing",
    "crates/runtime/pipeline/nodes/clock",
    "crates/runtime/pipeline/nodes/fixture",
    "crates/runtime/pipeline/nodes/sequencer",
    "crates/runtime/pipeline/nodes/inputs",
    "crates/runtime/pipeline/nodes/connections/g13",
    "crates/runtime/pipeline/nodes/connections/gamepad",
    "crates/runtime/pipeline/nodes/connections/laser",
    "crates/runtime/pipeline/nodes/connections/protocols/dmx",
    "crates/runtime/pipeline/nodes/connections/protocols/midi",
    "crates/runtime/pipeline/nodes/connections/protocols/mqtt",
    "crates/runtime/pipeline/nodes/connections/protocols/opc",
    "crates/runtime/pipeline/nodes/connections/protocols/osc",
    "crates/runtime/pipeline/nodes/connections/protocols/pro-dj-link",
    "crates/runtime/pipeline/nodes/data",
    "crates/runtime/pipeline/nodes/pixels",
    "crates/runtime/pipeline/nodes/plan",
    "crates/runtime/pipeline/nodes/timecode",
    "crates/runtime/pipeline/nodes/transport",
    "crates/runtime/pipeline/nodes/vector",
    "crates/runtime/pipeline/nodes/video",
    "crates/runtime/pipeline/nodes/video/screen-capture",
    "crates/runtime/pipeline/nodes/video/surfaces",
    "crates/runtime/pipeline/nodes/video/text",
    "crates/runtime/pipeline/nodes/video/webcams",
    "crates/runtime/pipeline/ports",
    "crates/runtime/pipeline/templates",
    "crates/runtime/processing",
    "crates/runtime/settings",
    "crates/runtime/status",
    "crates/runtime/wgpu",
    "crates/ui",
    "crates/ui/ffi",
    "crates/util",
    "crates/util/bus",
    "crates/util/package",
    "docs"
]

[lib]
name = "mizer"
path = "src/lib.rs"
bench = false

[[bin]]
name = "mizer"
path = "src/main.rs"
bench = false

[package]
name = "mizer"
version = "0.1.0"
authors = ["Max JÃ¶hnk <maxjoehnk@gmail.com>"]
edition = "2021"
license = "GNU AGPLv3"

[features]
default = ["ui", "debug-ui"]
build-ffmpeg = ["ffmpeg-the-third/build"]
ui = ["mizer-ui"]
debug-ui = ["mizer-debug-ui-egui", "mizer-debug-ui-impl/active"]
tracing = ["profiling/profile-with-tracy", "mizer-util/tracing"]

[dependencies]
derive_more = "0.99"
directories-next = "2.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-appender = "0.2"
log = "0.4"
anyhow = "1"
structopt = "0.3"
metrics = "0.22"
mizer-media = { path = "crates/components/media" }
mizer-project-files = { path = "crates/projects" }
mizer-fixtures = { path = "crates/components/fixtures" }
mizer-gdtf-provider = { path = "crates/components/fixtures/gdtf" }
mizer-open-fixture-library-provider = { path = "crates/components/fixtures/open-fixture-library" }
mizer-qlcplus-provider = { path = "crates/components/fixtures/qlcplus" }
mizer-fixture-definition-provider = { path = "crates/components/fixtures/mizer-definitions" }
mizer-plan = { path = "crates/components/plan" }
mizer-pipeline = { path = "crates/runtime/pipeline" }
mizer-api = { path = "crates/api" }
mizer-session = { path = "crates/runtime/session" }
mizer-connections = { path = "crates/components/connections" }
mizer-devices = { path = "crates/components/connections/devices" }
mizer-sequencer = { path = "crates/components/sequencer" }
mizer-timecode = { path = "crates/components/timecode" }
mizer-runtime = { path = "crates/runtime" }
mizer-execution-planner = { path = "crates/runtime/execution-planner" }
mizer-node = { path = "crates/runtime/pipeline/node" }
mizer-nodes = { path = "crates/runtime/pipeline/nodes" }
mizer-layouts = { path = "crates/runtime/layouts" }
mizer-clock = { path = "crates/runtime/clock" }
mizer-protocol-citp = { path = "crates/components/connections/protocols/citp" }
mizer-protocol-dmx = { path = "crates/components/connections/protocols/dmx" }
mizer-protocol-midi = { path = "crates/components/connections/protocols/midi" }
mizer-protocol-mqtt = { path = "crates/components/connections/protocols/mqtt" }
mizer-protocol-osc = { path = "crates/components/connections/protocols/osc" }
mizer-surfaces = { path = "crates/components/surfaces" }
mizer-processing = { path = "crates/runtime/processing" }
mizer-module = { path = "crates/runtime/module" }
mizer-ui = { path = "crates/ui", optional = true }
mizer-debug-ui-impl = { path = "crates/runtime/debug-ui/impl" }
mizer-debug-ui-egui = { path = "crates/runtime/debug-ui/egui", optional = true }
mizer-util = { path = "crates/util" }
mizer-message-bus = { path = "crates/util/bus" }
mizer-settings = { path = "crates/runtime/settings" }
mizer-status-bus = { path = "crates/runtime/status" }
mizer-command-executor = { path = "crates/runtime/commander/executor" }
mizer-vector = { path = "crates/components/vector" }
mizer-wgpu = { path = "crates/runtime/wgpu" }
tokio = { version = "1.36", features = ["rt-multi-thread", "macros", "time", "rt"] }
futures = "0.3"
pinboard = "2.2"
dashmap = "5"
flume = "0.11"
profiling = "1.0"
rayon = "1.8"
serde = { version = "1", features = ["rc"] }
sentry = { version = "0.32", features = ["anyhow", "tracing", "debug-images"] }
sentry-tracing = "0.32"
spin_sleep = "1.2"
ffmpeg-the-third = { version = "1.2", features = ["static"] }
rolling-file = "0.2"

[dev-dependencies]
test-case = "3.3"
criterion = { version = "0.5", features = ["html_reports"] }

[[bench]]
name = "oscillator_nodes"
harness = false

[profile.bench]
lto = true

[profile.dev]
opt-level = 1

[profile.dev.package."*"]
opt-level = 3

[target.'cfg(target_os = "macos")'.dependencies]
oslog = "0.2"

[patch.crates-io]
avahi-sys = { git = "https://github.com/maxjoehnk/avahi-sys.git", branch = "update-bindgen-0.64" }
nokhwa = { git = "https://github.com/l1npengtul/nokhwa.git", rev = "3be9227" }
citp = { git = "https://github.com/maxjoehnk/citp.git", branch = "master" }
