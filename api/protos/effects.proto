syntax = "proto3";

package mizer.effects;

import "fixtures.proto";
import "sequencer.proto";

service EffectsApi {
  rpc GetEffects (GetEffectsRequest) returns (Effects) {}
  rpc AddEffect (AddEffectRequest) returns (Effect) {}
  rpc AddEffectChannel (AddEffectChannelRequest) returns (Effect) {}
  rpc DeleteEffectChannel (DeleteEffectChannelRequest) returns (Effect) {}
  rpc UpdateEffectStep (UpdateEffectStepRequest) returns (Effect) {}
  rpc AddEffectStep (AddEffectStepRequest) returns (Effect) {}
  rpc DeleteEffectStep (DeleteEffectStepRequest) returns (Effect) {}
}

message GetEffectsRequest {}
message AddEffectRequest {
  string name = 1;
}
message UpdateEffectStepRequest {
  uint32 effect_id = 1;
  uint32 channel_index = 2;
  uint32 step_index = 3;
  EffectStep step = 4;
}

message AddEffectChannelRequest {
  uint32 effect_id = 1;
  mizer.fixtures.FixtureFaderControl control = 2;
}

message DeleteEffectChannelRequest {
  uint32 effect_id = 1;
  uint32 channel_index = 2;
}

message AddEffectStepRequest {
  uint32 effect_id = 1;
  uint32 channel_index = 2;
  EffectStep step = 3;
}

message DeleteEffectStepRequest {
  uint32 effect_id = 1;
  uint32 channel_index = 2;
  uint32 step_index = 3;
}

message Effects {
  repeated Effect effects = 1;
}

message Effect {
  uint32 id = 1;
  string name = 2;
  repeated EffectChannel channels = 3;
}

message EffectChannel {
  mizer.fixtures.FixtureControl control = 1;
  repeated EffectStep steps = 2;
}

message EffectStep {
  mizer.sequencer.CueValue value = 1;
  oneof control_point {
    SimpleControlPoint simple = 2;
    QuadraticControlPoint quadratic = 3;
    CubicControlPoint cubic = 4;
  }
}

message SimpleControlPoint {
}

message QuadraticControlPoint {
  double c0a = 1;
  double c0b = 2;
}

message CubicControlPoint {
  double c0a = 1;
  double c0b = 2;
  double c1a = 3;
  double c1b = 4;
}
