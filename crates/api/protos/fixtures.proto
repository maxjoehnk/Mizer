syntax = "proto3";

package mizer.fixtures;

service FixturesApi {
  rpc GetFixtures (GetFixturesRequest) returns (Fixtures) {}
}

message AddFixturesRequest {
  AddFixtureRequest request = 1;
  uint32 count = 2;
}

message AddFixtureRequest {
  string definition_id = 1;
  string mode = 2;
  uint32 id = 3;
  uint32 channel = 4;
  uint32 universe = 5;
  string name = 6;
}

message GetFixturesRequest {
}

message DeleteFixturesRequest {
  repeated uint32 fixture_ids = 1;
}

message UpdateFixtureRequest {
  uint32 fixture_id = 1;
  optional bool invert_pan = 2;
  optional bool invert_tilt = 3;
  optional bool reverse_pixel_order = 4;
  optional string name = 5;
  optional FixtureAddress address = 6;
}

message FixtureAddress {
  uint32 universe = 1;
  uint32 channel = 2;
}

message FixtureId {
  oneof id {
    uint32 fixture = 1;
    SubFixtureId sub_fixture = 2;
  }
}

message SubFixtureId {
  uint32 fixture_id = 1;
  uint32 child_id = 2;
}

message Fixtures {
  repeated Fixture fixtures = 1;
}

message Fixture {
  uint32 id = 1;
  string name = 2;
  string manufacturer = 3;
  string model = 4;
  string mode = 5;
  uint32 universe = 6;
  uint32 channel = 7;
  uint32 channel_count = 8;
  repeated FixtureControls controls = 9;
  repeated SubFixture children = 10;
  FixtureConfig config = 11;
}

message FixtureConfig {
  bool invert_pan = 1;
  bool invert_tilt = 2;
  bool reverse_pixel_order = 3;
}

message SubFixture {
  uint32 id = 1;
  string name = 2;
  repeated FixtureControls controls = 3;
}

enum FixtureControl {
  INTENSITY = 0;
  SHUTTER = 1;
  COLOR_MIXER = 2;
  COLOR_WHEEL = 3;
  PAN = 4;
  TILT = 5;
  FOCUS = 6;
  ZOOM = 7;
  PRISM = 8;
  IRIS = 9;
  FROST = 10;
  GOBO = 11;
  GENERIC = 12;
}

message FixtureControls {
  FixtureControl control = 1;
  oneof value {
    FaderChannel fader = 2;
    ColorMixerChannel color_mixer = 3;
    ColorWheelChannel color_wheel = 4;
    AxisChannel axis = 5;
    GoboChannel gobo = 6;
    GenericChannel generic = 7;
  }
}

message FaderChannel {
  double value = 1;
}

message ColorMixerChannel {
  double red = 1;
  double green = 2;
  double blue = 3;
}

message ColorWheelChannel {
  double value = 1;
  repeated ColorWheelSlot colors = 2;
}

message ColorWheelSlot {
  string name = 1;
  double value = 2;
  repeated string colors = 3;
}

message AxisChannel {
  double value = 1;
  double angle_from = 2;
  double angle_to = 3;
}

message GoboChannel {
  double value = 1;
  repeated Gobo gobos = 2;
}

message Gobo {
  string name = 1;
  double value = 2;
  oneof image {
    string svg = 3;
    bytes raster = 4;
  }
}


message GenericChannel {
  double value = 1;
  string name = 2;
}

message GetFixtureDefinitionsRequest {
}

message FixtureDefinitions {
  repeated FixtureDefinition definitions = 1;
}

message FixtureDefinition {
  string id = 1;
  string name = 2;
  string manufacturer = 3;
  repeated FixtureMode modes = 4;
  FixturePhysicalData physical = 5;
  repeated string tags = 6;
  string provider = 7;
}

message FixtureMode {
  string name = 1;
  repeated FixtureChannel channels = 2;
}

message FixtureChannel {
  string name = 1;
  oneof resolution {
    CoarseResolution coarse = 2;
    FineResolution fine = 3;
    FinestResolution finest = 4;
  }

  message CoarseResolution {
    uint32 channel = 1;
  }

  message FineResolution {
    uint32 fine_channel = 1;
    uint32 coarse_channel = 2;
  }

  message FinestResolution {
    uint32 finest_channel = 1;
    uint32 fine_channel = 2;
    uint32 coarse_channel = 3;
  }
}

message FixturePhysicalData {
  float width = 1;
  float height = 2;
  float depth = 3;
  float weight = 4;
}

message FixtureFaderControl {
  FixtureControl control = 1;
  optional ColorMixerControlChannel color_mixer_channel = 2;
  optional string generic_channel = 3;

  enum ColorMixerControlChannel {
    RED = 0;
    GREEN = 1;
    BLUE = 2;
  }
}
