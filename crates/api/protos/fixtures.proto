syntax = "proto3";

package mizer.fixtures;

service FixturesApi {
  rpc GetFixtures (GetFixturesRequest) returns (Fixtures) {}
}

message AddFixturesRequest {
  AddFixtureRequest request = 1;
  uint32 count = 2;
}

message AddFixtureRequest {
  string definition_id = 1;
  string mode = 2;
  uint32 id = 3;
  uint32 channel = 4;
  uint32 universe = 5;
  string name = 6;
}

message GetFixturesRequest {
}

message DeleteFixturesRequest {
  repeated uint32 fixture_ids = 1;
}

message UpdateFixtureRequest {
  uint32 fixture_id = 1;
  optional bool invert_pan = 2;
  optional bool invert_tilt = 3;
  optional bool reverse_pixel_order = 4;
  optional string name = 5;
  optional FixtureAddress address = 6;
  optional UpdateFixtureLimit limit = 7;

  message UpdateFixtureLimit {
    string channel = 1;
    optional double min = 2;
    optional double max = 3;
  }
}

message FixtureAddress {
  uint32 universe = 1;
  uint32 channel = 2;
}

message FixtureId {
  oneof id {
    uint32 fixture = 1;
    SubFixtureId sub_fixture = 2;
  }
}

message SubFixtureId {
  uint32 fixture_id = 1;
  uint32 child_id = 2;
}

message Fixtures {
  repeated Fixture fixtures = 1;
}

message Fixture {
  uint32 id = 1;
  string name = 2;
  string manufacturer = 3;
  string model = 4;
  string mode = 5;
  uint32 universe = 6;
  uint32 channel = 7;
  uint32 channel_count = 8;
  repeated FixtureChannel channels = 9;
  repeated SubFixture children = 10;
  FixtureConfig config = 11;
}

message FixtureConfig {
  bool invert_pan = 1;
  bool invert_tilt = 2;
  bool reverse_pixel_order = 3;
  repeated FixtureChannelLimit channel_limits = 4;
}

message FixtureChannelLimit {
  string channel = 1;
  optional double min = 2;
  optional double max = 3;
}

message SubFixture {
  uint32 id = 1;
  string name = 2;
  repeated FixtureChannel channels = 3;
}

message FixtureChannel {
  string channel = 1;
  optional string label = 2;
  FixtureChannelCategory category = 3;
  repeated FixtureChannelPreset presets = 4;
  optional FixtureValue value = 5;
}

message FixtureChannelDefinition {
  string channel = 1;
  optional string label = 2;
  FixtureChannelCategory category = 3;
  repeated FixtureChannelPreset presets = 4;
}

message FixtureChannelPreset {
  FixtureValue value = 1;
  string name = 2;
  optional FixtureImage image = 3;
  repeated string colors = 4;
}

message FixtureValue {
  oneof value {
    double percent = 1;
  }
}

message FixtureImage {
  oneof image {
    string svg = 1;
    bytes raster = 2;
  }
}

message GetFixtureDefinitionsRequest {
}

message FixtureDefinitions {
  repeated FixtureDefinition definitions = 1;
}

message FixtureDefinition {
  string id = 1;
  string name = 2;
  string manufacturer = 3;
  repeated FixtureMode modes = 4;
  FixturePhysicalData physical = 5;
  repeated string tags = 6;
  string provider = 7;
}

message FixtureMode {
  string name = 1;
  repeated FixtureChannelDefinition channels = 2;
  uint32 dmx_footprint = 3;
}

message FixturePhysicalData {
  float width = 1;
  float height = 2;
  float depth = 3;
  float weight = 4;
}

enum FixtureChannelCategory {
  NONE = 0;
  DIMMER = 1;
  COLOR = 2;
  POSITION = 3;
  GOBO = 4;
  BEAM = 5;
  SHAPER = 6;
  CUSTOM = 7;
}
